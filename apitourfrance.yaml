openapi: 3.0.1
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
tags:
  - name: cyclists
    description: Operaciones con ciclistas
  - name: teams
    description: Operaciones con equipos
  - name: climbs
    description: Operaciones con puertos
  - name: stages
    description: Operaciones con etapas
  - name: sponsors
    description: Operaciones con patrocinadores
servers:
  - url: '//https://tourfrance.com'
paths:
  /cyclists:
    get:
      tags:
        - cyclists
      summary: Devuelve los ciclistas registrados.
      description: |
        Devuelve un listado con los ciclistas solicitados dependiento de los filtros aplicados
        
        Se puede filtrar a través de cualquier de los filtros indicados name, specialty, birthplace incluso ambos al mismo tiempo
          - **name**: Filtra por nombre
          - **specialty**: Filtra por especialidad
          - **birthplace**: Filtra por lugar de nacimiento
      parameters:
        - name: name
          in: query
          description: Filtro para nombre del ciclista
          required: false
          schema:
            type: string
        - name: specialty
          in: query
          description: Filtro para especialidad del ciclista
          required: false
          schema:
            type: string
        - name: birthplace
          in: query
          description: Filtro para especialidad del ciclista
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclistOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /teams/{teamId}/cyclists:
    post:
      tags:
        - cyclists
      summary: Registra un ciclista
      description: Dar de alta un nuevo ciclista según la información facilitada
      parameters:
        - name: teamId
          in: path
          description: Identificador del equipo al que pertenece el ciclista
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Detalles del nuevo ciclista
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyclistRegistrationDto'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclistOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /cyclists/{cyclistId}:
    get:
      tags:
        - cyclists
      summary: Detalle de un ciclista
      description: Devuelve los detalles de un ciclista específico
      parameters:
        - name: cyclistId
          in: path
          description: Identificador del ciclista
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclistOutDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - cyclists
      summary: Elimina un ciclista
      description: Dar de baja el ciclista cuyo id se pasa como parámetro
      parameters:
        - name: cyclistId
          in: path
          description: Identificador del ciclista
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - cyclists
      summary: Modifica un ciclista
      description: Permite modificar algunos detalles de un coche
      parameters:
        - name: cyclistId
          in: path
          description: Identificador del ciclista
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles del ciclista
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyclistInDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclistOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /climbs:
    get:
      tags:
        - climbs
      summary: Devuelve los puertos registrados.
      description: |
        Devuelve un listado con los puertos solicitados dependiento de los filtros aplicados

        Se puede filtrar a través de cualquier de los filtros indicados name, category, region incluso ambos al mismo tiempo
          - **name**: Filtra por nombre
          - **category**: Filtra por categoría
          - **region**: Filtra por región a la que pertenece
      parameters:
        - name: name
          in: query
          description: Filtro para nombre del ciclista
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Filtro para categoría del puerto
          required: false
          schema:
            type: string
        - name: region
          in: query
          description: Filtro para región a la que pertenece el puerto
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclistOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /climbs/{climbId}:
    get:
      tags:
        - climbs
      summary: Detalle de un puerto
      description: Devuelve los detalles de un puerto específico
      parameters:
        - name: climbId
          in: path
          description: Identificador del puerto
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclistOutDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - climbs
      summary: Elimina un puerto
      description: Dar de baja el puerto cuyo id se pasa como parámetro
      parameters:
        - name: climbId
          in: path
          description: Identificador del puerto
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - climbs
      summary: Modifica un puerto
      description: Permite modificar algunos detalles de un puerto
      parameters:
        - name: climbId
          in: path
          description: Identificador del puerto
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles del puerto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyclistInDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclistOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /stages/{stageId}/climbs:
    post:
      tags:
        - climbs
      summary: Registra un puerto
      description: Dar de alta un nuevo puerto según la información facilitada
      parameters:
        - name: stageId
          in: path
          description: Identificador de la etapa en la que se asciende el puerto
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Detalles del nuevo puerto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClimbRegistrationDto'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclistOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /stages:
    get:
      tags:
        - stages
      summary: Devuelve el listado de etapas
      description: |
        Devuelve un listado con las etapas registradas dependiento de los filtros aplicados

        Se puede filtrar a través de cualquier de los filtros indicados departure, arrival, type incluso ambos al mismo tiempo
          - **departure**: Filtra por lugar de salida
          - **arrival**: Filtra por lugar de llegada
          - **type**: Filtra por tipo de etapa (montaña, contrarreloj, cronoescalada..)
      parameters:
        - name: departure
          in: query
          description: Filtro para lugar de salida
          required: false
          schema:
            type: string
        - name: arrival
          in: query
          description: Filtro para lugar de llegada
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: Filtro para tipo de etapa
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StageOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - stages
      summary: Registra una etapa
      description: Dar de alta una nueva etapa según la información facilitada
      requestBody:
        description: Detalles de la nueva etapa
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stage'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /stages/{stageId}:
    delete:
      tags:
        - stages
      summary: Elimina una etapa
      description: Eliminar la etapa cuyo id se pasa como parámetro
      parameters:
        - name: stageId
          in: path
          description: Identificador de la etapa
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - stages
      summary: Modifica una etapa
      description: Permite modificar algunos detalles de una etapa
      parameters:
        - name: stageId
          in: path
          description: Identificador de la etapa
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles de la etapa
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StageInDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /teams:
    get:
      tags:
        - teams
      summary: Devuelve el listado de equipos
      description: |
        Devuelve un listado con los equipos registrados dependiento de los filtros aplicados

        Se puede filtrar a través de cualquier de los filtros indicados name, email, country incluso ambos al mismo tiempo
          - **name**: Filtra por nombre
          - **email**: Filtra por email
          - **country**: Filtra por lugar de country
      parameters:
        - name: name
          in: query
          description: Filtro para nombre del equipo
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Filtro para el email del equipo
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filtro para el pais del equipo
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - teams
      summary: Registra un equipo
      description: Dar de alta un nuevo equipo según la información facilitada
      requestBody:
        description: Detallos del nuevo equipo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /teams/{teamId}:
    delete:
      tags:
        - teams
      summary: Elimina un equipo
      description: Dar de baja el equipo cuyo id se pasa como parámetro
      parameters:
        - name: teamId
          in: path
          description: Identificador del equipo
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - teams
      summary: Modifica un equipo
      description: Permite modificar algunos detalles de un equipo
      parameters:
        - name: teamId
          in: path
          description: Identificador del equipo
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles del equipo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /sponsors:
    get:
      tags:
        - sponsors
      summary: Devuelve los patrocinadores registrados.
      description: |
        Devuelve un listado con los patrocinadores solicitados dependiento de los filtros aplicados
        
        Se puede filtrar a través de cualquier de los filtros indicados name, country, email incluso ambos al mismo tiempo
          - **name**: Filtra por nombre
          - **country**: Filtra por país
          - **email**: Filtra por email
      parameters:
        - name: name
          in: query
          description: Filtro para nombre del del sponsor
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filtro por país de procedencia del sponsor
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Filtro para email del sponsor
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SponsorOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /teams/{teamId}/sponsors:
    post:
      tags:
        - sponsors
      summary: Registra un sponsor
      description: Dar de alta un nuevo sponsor según la información facilitada
      parameters:
        - name: teamId
          in: path
          description: Identificador del equipo al que pertenece el sponsor
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Detalles del nuevo sponsor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SponsorRegistrationDto'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /sponsors/{sponsorId}:
    get:
      tags:
        - sponsors
      summary: Detalle de un sponsor
      description: Devuelve los detalles de un sponsor específico
      parameters:
        - name: sponsorId
          in: path
          description: Identificador del sponsor
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorOutDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - sponsors
      summary: Elimina un sponsor
      description: Dar de baja el sponsor cuyo id se pasa como parámetro
      parameters:
        - name: sponsorId
          in: path
          description: Identificador del sponsor
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - sponsors
      summary: Modifica un sponsor
      description: Permite modificar algunos detalles de un sponsor
      parameters:
        - name: sponsorId
          in: path
          description: Identificador del sponsor
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles del sponsor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SponsorInDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    Climb:
      type: object
      properties:
        name:
          type: string
          description: Nombre del puerto
        category:
          type: string
          description: Categoría del puerto por dificultad
        region:
          type: string
          description: Región a la que pertenece el puerto
        altitude:
          type: number
          format: int64
          description: altitud máxima en cima del puerto
        slope:
          type: number
          format: int64
          description: pendiente media de elevación
        goal:
          type: boolean
          description: es final de etapa
        lastAscent:
          type: string
          format: date
          description: última fecha en la que se ascendió el puerto en el Tour
        longitude:
          type: number
          format: int64
          description: coordenadas de longitud del punto donde se inicia el puerto
        latitude:
          type: number
          format: int64
          description: coordenadas de latitud del punto donde se inicia el puerto
      example:
        name: Tourmalet
        category: Hors Category
        region: Francia
        altitude: 1.640
        slope: 7.2
        goal: false
        lasAscent: 2024-07-14
        longitude: 47.32547
        latitude: 0.746589
    ClimbInDto:
      allOf:
        - $ref: '#/components/schemas/Climb'
    ClimbRegistrationDto:
      allOf:
        - $ref: '#/components/schemas/Climb'
    ClimbOutDto:
      allOf:
        - $ref: '#/components/schemas/Climb'
      type: object
      properties:
        id:
          type: number
          format: int64
          description: identificador del puerto
          example: 4
        stageId:
          type: number
          format: int64
          description: identificado de la etapa a la que pertenece el puerto
          example: 7
    Sponsor:
      type: object
      properties:
        name:
          type: string
          description: Nombre del sponsor
        country:
          type: string
          description: país del sponsor
        email:
          type: string
          description: correo electrónico del sponsor
        employees:
          type: number
          format: int64
          description: número de empleados que tiene el sponsor
        funding:
          type: number
          format: int64
          description: importe que destina al patrocinio
        endContract:
          type: string
          format: date
          description: fecha fin de patrocinio firmado
        mainSponsor:
          type: boolean
          format: string
          description: si es patrocinador principal
      example:
        name: Ineos
        country: United Kingdom
        email: ineosgranadiers@ineos.com
        employees: 4.214
        funding: 124
        endContract: 2027-12-30
        mainSponsor: true
    SponsorInDto:
      allOf:
        - $ref: '#/components/schemas/Sponsor'
    SponsorRegistrationDto:
      allOf:
        - $ref: '#/components/schemas/Sponsor'
      type: object
      properties:
        teamId:
          type: number
          format: int64
          description: identificador del equipo al que patrocina el sponsor
          example: 23
    SponsorOutDto:
      allOf:
        - $ref: '#/components/schemas/SponsorRegistrationDto'
      type: object
      properties:
        id:
          type: number
          format: int64
          description: identificador del sponsor
          example: 47
    Cyclist:
      type: object
      properties:
        name:
          type: string
          description: Nombre del ciclista
        specialty:
          type: string
          description: Especialidad del ciclista
        birthplace:
          type: string
          description: Lugar de nacimiento del ciclista
        titles:
          type: number
          format: int64
          description: Titulos ganador por el ciclista
        birthdate:
          type: string
          format: date
          description: Fecha de nacimiento del ciclista
      example:
        name: Pogaçar
        specialty: Escalador
        birthplace: Denmark
        titles: 10
        birthdate: 2000-12-30
    CyclistInDto:
      allOf:
        - $ref: '#/components/schemas/Cyclist'
    CyclistRegistrationDto:
      allOf:
        - $ref: '#/components/schemas/Cyclist'
      type: object
      properties:
        weight:
          type: number
          format: float
          description: Peso del ciclista
          example: 62
        isLeader:
          type: boolean
          description: Está activo o no el ciclista
          example: true
    CyclistOutDto:
      allOf:
        - $ref: '#/components/schemas/Cyclist'
      type: object
      properties:
        id:
          type: number
          format: int64
          description: El identificador del ciclista
          example: 1
        isLeader:
          type: boolean
          description: Está activo o no el ciclista
          example: true
        teamId:
          type: number
          format: int64
          description: identificador del equipo al que pertenece
          example: 98
    Team:
      type: object
      properties:
        name:
          type: string
          description: Nombre del equipo
        email:
          type: string
          description: Email del equipo
        country:
          type: string
          description: Procedencia del equipo
        budget:
          type: number
          format: int64
          description: presupuesto del equipo
        fundationDate:
          type: string
          format: date
          description: Fecha de fundación del equipo
      example:
        name: UAE
        email: uae@gmail.com
        country: Emirates
        budget: 240
        fundationDate: 2015-12-30
    TeamInDto:
      allOf:
        - $ref: '#/components/schemas/Team'
    TeamRegistrationDto:
      allOf:
        - $ref: '#/components/schemas/Team'
    TeamOutDto:
      allOf:
        - $ref: '#/components/schemas/Team'
        - type: object
          properties:
            id:
              type: number
              format: int64
              description: Identificador único del equipo
              example: 65
      example:
        id: 95
        name: UAE
        email: uae@gmail.com
        country: Emirates
        budget: 240
        fundationDate: 2015/12/30
    Stage:
      type: object
      properties:
        departure:
          type: string
          description: Ciudad de salida de la etapa
        arrival:
          type: string
          description: Ciudad de llegada de la etapa
        type:
          type: string
          description: Tipo de etapa (cronoescalada, montaña, contrarreloj...)
        elevation:
          type: number
          format: int64
          description: elevación ganada en metros
        kilometers:
          type: number
          format: int64
          description: distancia de la etapa en kilómetros
        mountainStage:
          type: boolean
          description: indica si es etapa de montaña
        stageDate:
          type: string
          format: date
          description: fecha en la que se realiza la etapa
      example:
        departure: Burdeos
        arrival: Paris
        type: llana
        elevation: 1.800
        kilometers: 194
        mountaingStage: false
        stageDate: 2025-07-07
    StageInDto:
      allOf:
        - $ref: '#/components/schemas/Stage'
    StageRegistrationDto:
      allOf:
        - $ref: '#/components/schemas/Stage'
    StageOutDto:
      allOf:
        - $ref: '#/components/schemas/Stage'
        - type: object
          properties:
            id:
              type: number
              format: int64
              description: Identificador de la etapa
              example: 7
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Código de error
        message:
          type: string
          description: Descripción del error
    BadRequest:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      type: object
      properties:
        errorMessages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
      example:
        code: 400
        message: Bad Request
    ErrorMessage:
      type: object
      properties:
        fieldName:
          type: string
          description: Campo donde está el error
          example: model
        message:
          type: string
          description: Mensaje de error asociado al campo
          example: El dato es obligatorio
    NotFound:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 404
        message: Not Found
    InternalServerError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 500
        message: Internal Server Error
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'







